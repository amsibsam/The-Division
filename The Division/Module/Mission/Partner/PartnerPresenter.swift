//
//  PartnerPresenter.swift
//  The Division
//
//  Created MTMAC16 on 28/08/18.
//  Copyright © 2018 bism. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class PartnerPresenter: PartnerPresenterProtocol {

    weak private var view: PartnerViewProtocol?
    var interactor: PartnerInteractorInputProtocol?
    private let router: PartnerWireframeProtocol

    init(interface: PartnerViewProtocol, interactor: PartnerInteractorInputProtocol?, router: PartnerWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func getAllAgent() {
        interactor?.getAllAgent()
    }

    func getPartner(on mission: Mission) {
        interactor?.getPartner(on: mission)
    }
    
    func addPartner(on mission: Mission, with partner: Member) {
        interactor?.addPartner(on: mission, with: partner)
    }

}

extension PartnerPresenter: PartnerInteractorOutputProtocol {
    func onAddPartnerSucceeded(with partner: Member) {
        view?.onAddPartnerSucceeded(with: partner)
    }
    
    func onGetPartnerSucceeded(with partners: [Member]) {
        view?.onGetPartnerSucceeded(with: partners)
    }
    
    func onGetAllAgentSucceeded(with agents: [Member]) {
        view?.onGetAllAgentSucceeded(with: agents)
    }
}
