//
//  PartnerProtocols.swift
//  The Division
//
//  Created MTMAC16 on 28/08/18.
//  Copyright © 2018 bism. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol PartnerWireframeProtocol: class {

}
//MARK: Presenter -
protocol PartnerPresenterProtocol: class {

    var interactor: PartnerInteractorInputProtocol? { get set }
    
    /* ViewController -> Presenter */
    func getAllAgent()
    func getPartner(on mission: Mission)
    func addPartner(on mission: Mission, with partner: Member)
}

//MARK: Interactor -
protocol PartnerInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func onGetAllAgentSucceeded(with agents: [Member])
    func onGetPartnerSucceeded(with partners: [Member])
    func onAddPartnerSucceeded(with partner: Member)
}

protocol PartnerInteractorInputProtocol: class {

    var presenter: PartnerInteractorOutputProtocol?  { get set }
    var dataManager: PartnerDataManagerInputProtocol? { get set }

    /* Presenter -> Interactor */
    func getAllAgent()
    func getPartner(on mission: Mission)
    func addPartner(on mission: Mission, with partner: Member)
}

//MARK: View -
protocol PartnerViewProtocol: class {

    var presenter: PartnerPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func onGetAllAgentSucceeded(with agents: [Member])
    func onGetPartnerSucceeded(with partners: [Member])
    func onAddPartnerSucceeded(with partner: Member)
}

//MARK: DataManager -
protocol PartnerDataManagerInputProtocol: class {
    var interactor: PartnerDataManagerOutputProtocol? { get set }
    
    /* Interactor -> DataManager */
    func getAllAgent()
    func getPartner(on mission: Mission)
    func addPartner(on mission: Mission, with partner: Member)
}

protocol PartnerDataManagerOutputProtocol: class {
    
    /* DataManager -> Interactor */
    func onGetAllAgentSucceeded(with agents: [Member])
    func onGetPartnerSucceeded(with partners: [Member])
    func onAddPartnerSucceeded(with partner: Member)
}
