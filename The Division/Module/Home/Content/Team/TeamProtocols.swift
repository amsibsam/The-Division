//
//  TeamProtocols.swift
//  The Division
//
//  Created MTMAC16 on 14/08/18.
//  Copyright © 2018 bism. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol TeamWireframeProtocol: class {
    /* Presenter -> Router */
    func presentCreateTeamPopup(from view: TeamViewProtocol, completion: @escaping (String, TeamDivision, Data?) -> ())
}
//MARK: Presenter -
protocol TeamPresenterProtocol: class {

    var interactor: TeamInteractorInputProtocol? { get set }
    
    /* ViewController -> Presenter */
    func getTeamMember(on team: TeamDivision)
    func addMember(with name: String, on team: TeamDivision, avatarUrl: String?)
    func presentCreateTeamPopup(from view: TeamViewProtocol, completion: @escaping (String, TeamDivision, Data?) -> ())
}

//MARK: Interactor -
protocol TeamInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func onGetMemberSucceeded(with members: [Member])
    func onSuccessAddMember(with member: Member)
}

protocol TeamInteractorInputProtocol: class {

    var presenter: TeamInteractorOutputProtocol?  { get set }
    var dataManager: TeamDataManagerInputProtocol? { get set }

    /* Presenter -> Interactor */
    func getTeamMember(on team: TeamDivision)
    func addMember(with member: Member)
}

//MARK: View -
protocol TeamViewProtocol: class {

    var presenter: TeamPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func onGetMemberSucceeded(with members: [Member])
    func onSuccessAddMember(with member: Member)
}

//MARK: DataManager -
protocol TeamDataManagerInputProtocol: class {
    var interactor: TeamDataManagerOutputProtocol? { get set }
    
    /* Interactor -> DataManager */
    func getTeamMember(on team: TeamDivision)
    func addMember(with member: Member)
}

protocol TeamDataManagerOutputProtocol : class {
    
    /* DataManager -> Interactor */
    func onGetMemberSucceeded(with members: [Member])
    func onSuccessAddMember(with member: Member)
}
