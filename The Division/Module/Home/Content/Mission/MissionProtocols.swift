//
//  MissionProtocols.swift
//  The Division
//
//  Created MTMAC16 on 16/08/18.
//  Copyright © 2018 bism. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol MissionWireframeProtocol: class {

}
//MARK: Presenter -
protocol MissionPresenterProtocol: class {

    var interactor: MissionInteractorInputProtocol? { get set }
    
    /* ViewController -> Peresenter */
    func getMission(with state: MissionState)
}

//MARK: Interactor -
protocol MissionInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func onGetMissionSucceeded(with missions: [Mission])
}

protocol MissionInteractorInputProtocol: class {

    var presenter: MissionInteractorOutputProtocol?  { get set }

    /* Presenter -> Interactor */
    func getMission(with state: MissionState)
}

//MARK: View -
protocol MissionViewProtocol: class {

    var presenter: MissionPresenterProtocol?  { get set }

    /* Presenter -> ViewController */
    func onGetMissionSucceeded(with missions: [Mission])
}

//MARK: DataManager -
protocol MissionDataManagerInputProtocol: class {
    var interactor: MissionDataManagerOutputProtocol? { get set }
    
    /* Interactor -> DataManager */
    func getMission(with state: MissionState)
}

protocol MissionDataManagerOutputProtocol: class {
    /* DataManager -> Interactor */
    func onGetMissionSucceeded(with missions: [Mission])
}

public enum MissionState: String {
    case InProgress
    case New
    case Finished
}
